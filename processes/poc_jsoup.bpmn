<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" id="Definitions_1eey2ty" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.1.1">
  <bpmn:process id="theses-poc" name="theses-poc" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_1qiu6x9</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:scriptTask id="fetch-theses" name="Fetch theses for user" scriptFormat="javascript">
      <bpmn:incoming>Flow_1qiu6x9</bpmn:incoming>
      <bpmn:outgoing>Flow_0xdbmlc</bpmn:outgoing>
      <bpmn:script>/**
 * Load Passwords Json File and returns a specific password
 *
 * @param string key The json property key that the password is stored. Currently only single level json is supported.
 * @param string secretsEnv The Env Variable name that the JSON is stored in using Docker Secrets
 * @return string The password. Assumes that all passwords are strings and therefore returns a string.
 */
function getSecret(key, secretsEnv) // if needed, this function can contain OAuth autentication. 
{
  with (new JavaImporter(java.lang.System, java.nio.file))
  {
    var secretsPath = System.getenv(secretsEnv)
    var secretsFileBytes = Files.readAllBytes(Paths.get(secretsPath))
  }

  var String = Java.type('java.lang.String')
  var secretsFileString = new String(secretsFileBytes)

  var secretsJson = JSON.parse(secretsFileString)
  var secret = secretsJson[key]

  return secret.toString()
}

var token = getSecret('token', 'MY_PASSWORD_FILE') // get token
var url = getSecret('url', 'MY_PASSWORD_FILE') // get url

with (new JavaImporter(org.jsoup))
{

  var doc =  Jsoup.connect(url + '/students/vankejan/theses/?token=' + token)
                  .ignoreContentType(true)
                  .method(Java.type('org.jsoup.Connection.Method').GET)
                  .timeout(30000)
                  .execute()

  var resBody = doc.body()
}

function spinify(body)
{
  var parsed = JSON.parse(body)
  var stringified = JSON.stringify(parsed)
  var spin = S(stringified)
  return spin
}

execution.setVariable('responseBodyString', spinify(resBody))</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_1qiu6x9" sourceRef="StartEvent_1" targetRef="fetch-theses" />
    <bpmn:endEvent id="Event_0vyx6j9">
      <bpmn:incoming>Flow_09ryucf</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_0xdbmlc" sourceRef="fetch-theses" targetRef="stop-user" />
    <bpmn:task id="stop-user" name="stop user task">
      <bpmn:documentation>This is for debugging purpose only.</bpmn:documentation>
      <bpmn:incoming>Flow_0xdbmlc</bpmn:incoming>
      <bpmn:outgoing>Flow_09ryucf</bpmn:outgoing>
    </bpmn:task>
    <bpmn:sequenceFlow id="Flow_09ryucf" sourceRef="stop-user" targetRef="Event_0vyx6j9" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="theses-poc">
      <bpmndi:BPMNEdge id="Flow_09ryucf_di" bpmnElement="Flow_09ryucf">
        <di:waypoint x="700" y="97" />
        <di:waypoint x="862" y="97" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0xdbmlc_di" bpmnElement="Flow_0xdbmlc">
        <di:waypoint x="480" y="97" />
        <di:waypoint x="600" y="97" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1qiu6x9_di" bpmnElement="Flow_1qiu6x9">
        <di:waypoint x="215" y="97" />
        <di:waypoint x="380" y="97" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="179" y="79" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0vyx6j9_di" bpmnElement="Event_0vyx6j9">
        <dc:Bounds x="862" y="79" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0tdqtui_di" bpmnElement="fetch-theses">
        <dc:Bounds x="380" y="57" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0eis8p7_di" bpmnElement="stop-user">
        <dc:Bounds x="600" y="57" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
